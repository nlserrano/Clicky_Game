{"ast":null,"code":"import _classCallCheck from \"/Users/bread/ASSIGNMENTS/Clicky_Game/clicky_game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bread/ASSIGNMENTS/Clicky_Game/clicky_game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/bread/ASSIGNMENTS/Clicky_Game/clicky_game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/bread/ASSIGNMENTS/Clicky_Game/clicky_game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/bread/ASSIGNMENTS/Clicky_Game/clicky_game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bread/ASSIGNMENTS/Clicky_Game/clicky_game/src/App.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport BodyContent from \"./components/BodyContent\";\nimport CharacterCard from \"./components/CharacterCard\";\nimport character from \"./cards\"; // function App () {\n//     return (\n//         <div>\n//             <Header />\n//             <BodyContent />\n//         </div>\n//     );\n// }\n//sets state to 0 or empty\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      character: character,\n      clickedCharacter: [],\n      score: 0\n    };\n\n    _this.imageClick = function (event) {\n      var currentCharacter = event.target.alt;\n      var characterAlreadyClicked = _this.state.clickedCharacter.indexOf(currentCharacter) > -1; //if you click on a fish that has already been selected, the game is reset and cards reordered\n\n      if (characterAlreadyClicked) {\n        _this.setState({\n          character: _this.state.character.sort(function (a, b) {\n            return 0.5 - Math.random();\n          }),\n          clickedCharacter: [],\n          score: 0\n        });\n\n        alert(\"You lose. Play again?\"); //if you click on an available fish, your score is increased and cards reordered\n      } else {\n        _this.setState({\n          character: _this.state.character.sort(function (a, b) {\n            return 0.5 - Math.random();\n          }),\n          clickedCharacter: _this.state.clickedCharacter.concat(currentCharacter),\n          score: _this.state.score + 1\n        }, //if you get all 12 fish corrent you get a congrats message and the game resets        \n        function () {\n          if (_this.state.score === 12) {\n            alert(\"Yay! You Win!\");\n\n            _this.setState({\n              character: _this.state.character.sort(function (a, b) {\n                return 0.5 - Math.random();\n              }),\n              clickedCharacter: [],\n              score: 0\n            });\n          }\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    //the order of components to be rendered: navbar, jumbotron, friendcard, footer \n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Header, {\n        score: this.state.score,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(BodyContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, this.state.fish.map(function (fish) {\n        return React.createElement(CharacterCard, {\n          imageClick: _this2.imageClick,\n          id: fish.id,\n          key: fish.id,\n          image: fish.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        });\n      })), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/bread/ASSIGNMENTS/Clicky_Game/clicky_game/src/App.js"],"names":["React","Component","Header","BodyContent","CharacterCard","character","App","state","clickedCharacter","score","imageClick","event","currentCharacter","target","alt","characterAlreadyClicked","indexOf","setState","sort","a","b","Math","random","alert","concat","fish","map","id","image"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport Header from \"./components/Header\";\nimport BodyContent from \"./components/BodyContent\";\nimport CharacterCard from \"./components/CharacterCard\";\nimport character from \"./cards\";\n\n// function App () {\n//     return (\n//         <div>\n//             <Header />\n//             <BodyContent />\n//         </div>\n//     );\n// }\n\n//sets state to 0 or empty\nclass App extends Component {\n    state = {\n      character,\n      clickedCharacter: [],\n      score: 0\n    };\n  \n  //when you click on a card ... the fish is taken out of the array\n    imageClick = event => {\n      const currentCharacter = event.target.alt;\n      const characterAlreadyClicked =\n        this.state.clickedCharacter.indexOf(currentCharacter) > -1;\n  \n  //if you click on a fish that has already been selected, the game is reset and cards reordered\n      if (characterAlreadyClicked) {\n        this.setState({\n          character: this.state.character.sort(function(a, b) {\n            return 0.5 - Math.random();\n          }),\n          clickedCharacter: [],\n          score: 0\n        });\n          alert(\"You lose. Play again?\");\n  \n  //if you click on an available fish, your score is increased and cards reordered\n      } else {\n        this.setState(\n          {\n            character: this.state.character.sort(function(a, b) {\n              return 0.5 - Math.random();\n            }),\n            clickedCharacter: this.state.clickedCharacter.concat(\n              currentCharacter\n            ),\n            score: this.state.score + 1\n          },\n  //if you get all 12 fish corrent you get a congrats message and the game resets        \n          () => {\n            if (this.state.score === 12) {\n              alert(\"Yay! You Win!\");\n              this.setState({\n                character: this.state.character.sort(function(a, b) {\n                  return 0.5 - Math.random();\n                }),\n                clickedCharacter: [],\n                score: 0\n              });\n            }\n          }\n        );\n      }\n    };\n  \n  //the order of components to be rendered: navbar, jumbotron, friendcard, footer \n    render() {\n      return (\n        <div>\n          <Header \n            score={this.state.score}\n          />\n          <BodyContent />\n          <div className=\"wrapper\">\n            {this.state.fish.map(fish => (\n              <CharacterCard\n                imageClick={this.imageClick}\n                id={fish.id}\n                key={fish.id}\n                image={fish.image}\n              />\n            ))}\n          </div>\n          <Footer />\n        </div>\n      );\n    }\n  }\n\nexport default App;"]},"metadata":{},"sourceType":"module"}